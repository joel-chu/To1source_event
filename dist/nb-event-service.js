!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t=t||self).NBEventService=e()}(this,function(){"use strict";var t=new Map,e=new Map,r=function(t){void 0===t&&(t={}),t.logger&&"function"==typeof t.logger&&(this.logger=t.logger),this.result=null,this.normalStore=new Map,this.lazyStore=new Map},o={$done:{configurable:!0},normalStore:{configurable:!0},lazyStore:{configurable:!0}};return r.prototype.logger=function(){},r.prototype.$on=function(t,e,r){var o=this;void 0===r&&(r=null);this.validate(t,e);var n=this.takeFromStore(t);if(!1===n)return this.logger("$on",t+" callback is not in lazy store"),this.addToNormalStore(t,"on",e,r);this.logger("$on",t+" found in lazy store");var i=0;return n.forEach(function(n){var a=n[0],s=n[1];o.run(e,a,r||s),i+=o.addToNormalStore(t,"on",e,r||s)}),i},r.prototype.$once=function(t,e,r){this.validate(t,e);var o=this.takeFromStore(t);if(!1===o&&!this.normalStore.has(t))return this.addToNormalStore(t,"once",e,r);var n=o[0],i=o[1];this.run(e,n,r||i)},r.prototype.$trigger=function(t,e,r){var o=this;void 0===e&&(e=[]),void 0===r&&(r=null),this.validateEvt(t);var n=0,i=this.normalStore;return i.has(t)?(i.get(t).forEach(function(a){++n;var s=a[0],l=a[1],u=a[2];if(o.run(s,e,r||l),"once"===u)return i.delete(t),n}),n):(this.addToLazyStore(t,e,r),n)},r.prototype.$call=function(){for(var t=[],e=arguments.length;e--;)t[e]=arguments[e];return Reflect.apply(this.$trigger,this,t)},r.prototype.$off=function(t){this.validateEvt(t);var e=[this.lazyStore,this.normalStore],r=!1;return e.forEach(function(e){e.has(t)&&(r=!0,e.delete(t))}),r},r.prototype.$get=function(t){this.validateEvt(t);var e=[],r=this.normalStore;return!!r.has(t)&&(r.get(t).forEach(function(t){var r=t[0];e.push(r)}),e)},o.$done.set=function(t){this.result=t},o.$done.get=function(){return this.result},r.prototype.validateEvt=function(t){if("string"==typeof t)return!0;throw new Error("event name must be string type!")},r.prototype.validate=function(t,e){if(this.validateEvt(t)&&"function"==typeof e)return!0;throw new Error("callback required to be function type!")},r.prototype.run=function(t,e,r){this.logger(t),this.logger(e),this.logger(r),Reflect.apply(t,r,this.toArray(e))},r.prototype.takeFromStore=function(t,e){void 0===e&&(e="lazyStore");var r=this[e];if(this.logger(e,r),r.has(t)){var o=r.get(t);return r.delete(t),o}return!1},r.prototype.addToStore=function(t,e){for(var r,o=[],n=arguments.length-2;n-- >0;)o[n]=arguments[n+2];t.has(e)?(this.logger(e+" existed"),r=t.get(e)):(this.logger("create new Set for "+e),r=new Set),this.logger(o);var i=r.has(o);return this.logger("checking is this existed ["+i+"]"),r.add(o),t.set(e,r),[t,r.size]},r.prototype.addToNormalStore=function(t,e,r,o){this.logger(t,e,"add to normal store");var n=this.addToStore(this.normalStore,t,r,o,e),i=n[0],a=n[1];return this.normalStore=i,a},r.prototype.addToLazyStore=function(t,e,r){void 0===e&&(e=[]),void 0===r&&(r=null);var o=this.addToStore(this.lazyStore,t,this.toArray(e),r),n=o[0],i=o[1];return this.lazyStore=n,i},r.prototype.toArray=function(t){return Array.isArray(t)?t:[t]},o.normalStore.set=function(e){t.set(this,e)},o.normalStore.get=function(){return t.get(this)},o.lazyStore.set=function(t){e.set(this,t)},o.lazyStore.get=function(){return e.get(this)},Object.defineProperties(r.prototype,o),r});
//# sourceMappingURL=nb-event-service.js.map
